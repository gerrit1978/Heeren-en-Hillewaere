<?php

/************************************************************************
 * Drupal Hooks
 ************************************************************************/

/**
 * Implements hook_init
 */
function hc_header_init() {
  $path = drupal_get_path('module', 'hc_header');
  drupal_add_css($path . '/hc_header.css');
}


/**
 * Implements hook_block_info
 */
function hc_header_block_info() {
  $blocks = array();
  
  $blocks['node_header'] = array(
    'info' => t('Header Block with image, text, icon on page nodes'),
  );
  
  $blocks['home_header'] = array(
    'info' => t('Header Block with image and text on homepage'),
  );
  
  return $blocks;
}



/**
 * Implements hook_block_view
 */
function hc_header_block_view($delta = "") {
	$block = array();
	
	switch ($delta) {
	  case 'node_header':
	    if (arg(0) == 'node' && is_numeric(arg(1))) {
	      $node = node_load(arg(1));
        if (isset($node->field_header) && is_array($node->field_header) && count($node->field_header) > 0) {
    	    $block['content'] = array(
    	      '#markup' => _hc_header_render_block_node_header($node),
    	    );
    	  }
	    }
	    break;

    case 'home_header':
      $node = node_load(arg(1));
	    $block['content'] = array(
	      '#markup' => _hc_header_render_block_home_header($node),
	    );
      
	    
	    
	    
	    
	}
	
	return $block;
}


/**
 * Implements hook_theme
 */
function hc_header_theme($existing, $type, $theme, $path) {
  return array(
    'node_header_block' => array(
      'variables' => array('node' => NULL),
      'template' => 'hc_node_header_block',
    ),
    'home_header_block' => array(
      'variables' => array('node' => NULL),
      'template' => 'hc_home_header_block',
    ),
  );
}


/************************************************************************
 * Theme preprocess functions
 ************************************************************************/

function template_preprocess_node_header_block(&$vars) {
  $node = $vars['node'];

	$vars['header_title'] = '';
	$vars['header_text'] = '';
	$vars['header_bg_image'] = '';
	$vars['header_icon'] = '';
	$vars['header_classes'] = '';

	$header_field = field_get_items('node', $node, 'field_header');
	$header_field_id = $header_field[0]['value'];

  $entity_array = entity_load('field_collection_item', array($header_field_id));
  
  foreach ($entity_array as $entity) {
		$field_text_field = field_get_items('field_collection_item', $entity, 'field_header_text');	
		$field_title_field = field_get_items('field_collection_item', $entity, 'field_header_titel');	
		$field_bg_image_field = field_get_items('field_collection_item', $entity, 'field_header_bg_image');	
		$field_icon_field = field_get_items('field_collection_item', $entity, 'field_header_icoon');	
		$field_alignment_field = field_get_items('field_collection_item', $entity, 'field_header_uitlijning');
		$field_text_color_field = field_get_items('field_collection_item', $entity, 'field_header_tekstkleur');
		$classes = array();

		$vars['header_title'] = $field_title_field[0]['value'];
		$vars['header_text'] = $field_text_field[0]['value'];
		
		// add alignment class
		$classes[] = $field_alignment_field[0]['value'];
		
		// text color class
		$term = taxonomy_term_load($field_text_color_field[0]['tid']);
		if ($term) {
			$classes[] = strtolower($term->name);		
		}

		$vars['header_classes'] = implode(' ', $classes);
		
		if (isset($field_bg_image_field[0]['uri'])) {
		  $vars['header_bg_image'] = theme('image', array('path' => image_style_url('header', $field_bg_image_field[0]['uri'])));
		} 
		
		if (isset($field_icon_field[0]['uri'])) {
		  $vars['header_icon'] = theme('image', array('path' => file_create_url($field_icon_field[0]['uri'])));
		}		
  }
}


function template_preprocess_home_header_block(&$vars) {
  $node = $vars['node'];

	$vars['header_title'] = '';
	$vars['header_text'] = '';
	$vars['header_bg_image'] = '';
	$vars['header_classes'] = '';

	$header_field = field_get_items('node', $node, 'field_home_header');
	$header_field_id = $header_field[0]['value'];

  $entity_array = entity_load('field_collection_item', array($header_field_id));
  
  foreach ($entity_array as $entity) {
		$field_text_field = field_get_items('field_collection_item', $entity, 'field_home_header_text');	
		$field_title_field = field_get_items('field_collection_item', $entity, 'field_home_header_titel');	
		$field_bg_image_field = field_get_items('field_collection_item', $entity, 'field_home_header_bg_image');	
		$field_alignment_field = field_get_items('field_collection_item', $entity, 'field_home_header_uitlijning');
		$field_text_color_field = field_get_items('field_collection_item', $entity, 'field_home_header_tekstkleur');

		$vars['header_title'] = $field_title_field[0]['value'];
		$vars['header_text'] = $field_text_field[0]['value'];

		// add alignment class
		$classes[] = $field_alignment_field[0]['value'];
		
		// text color class
		$term = taxonomy_term_load($field_text_color_field[0]['tid']);
		if ($term) {
			$classes[] = strtolower($term->name);		
		}

		$vars['header_classes'] = implode(' ', $classes);

		
		if (isset($field_bg_image_field[0]['uri'])) {
		  $vars['header_bg_image'] = theme('image', array('path' => image_style_url('header', $field_bg_image_field[0]['uri'])));
		} 		
  }
}



/************************************************************************
 * Helper and rendering functions
 ************************************************************************/

/**
 * Render main header block (nodes)
 */
function _hc_header_render_block_node_header($node) {
 	$output = theme('node_header_block', array('node' => $node));
  return $output;
}


/**
 * Render main header block (nodes)
 */
function _hc_header_render_block_home_header($node) {
 	$output = theme('home_header_block', array('node' => $node));
  return $output;
}